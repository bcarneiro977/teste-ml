
services:
  nginx-gateway:
    image: nginx:latest
    ports:
      - "80:80"  # Exp√µe a porta 80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # O arquivo nginx.conf customizado
    depends_on:
      - servico-pedido
      - servico-consulta
    networks:
      - ml-network

  postgres-db:
    image: postgres:13
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ml-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    networks:
      - ml-network

  servico-pedido:
    build:
      context: ./servico-pedido
      dockerfile: Dockerfile.dev
    ports:
      - "8081:8080"  # Mudando para a porta 8081
    env_file:
      - .env
    depends_on:
      - postgres-db
      - rabbitmq
    networks:
      - ml-network
    volumes:
      - ./servico-pedido:/app
    working_dir: /app
    command: go run .
    mem_limit: 512m
    cpus: 0.5

  servico-consulta:
    build:
      context: ./servico-consulta
      dockerfile: Dockerfile.dev
    ports:
      - "8082:8080"  # Mudando para a porta 8082
    env_file:
      - .env
    depends_on:
      - postgres-db
      - rabbitmq
    networks:
      - ml-network
    volumes:
      - ./servico-consulta:/app
    working_dir: /app
    command: go run .
    mem_limit: 512m
    cpus: 0.5

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - ml-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - ml-network

networks:
  ml-network:
    driver: bridge

volumes:
  postgres_data:
  grafana-storage:
